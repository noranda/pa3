var search_data = {"index":{"searchIndex":["maze","mazecell","mazegenerator","mazeprinter","mazesolver","mazesolvercell","connect_cells()","display()","distance_to()","has_left_cell?()","has_top_cell?()","load()","new()","new()","new()","new()","new()","new()","print_maze()","redesign()","redesign()","solve()","solve()","trace()","readme"],"longSearchIndex":["maze","mazecell","mazegenerator","mazeprinter","mazesolver","mazesolvercell","mazecell#connect_cells()","maze#display()","mazecell#distance_to()","mazecell#has_left_cell?()","mazecell#has_top_cell?()","maze#load()","maze::new()","mazecell::new()","mazegenerator::new()","mazeprinter::new()","mazesolver::new()","mazesolvercell::new()","mazeprinter#print_maze()","maze#redesign()","mazegenerator#redesign()","maze#solve()","mazesolver#solve()","maze#trace()",""],"info":[["Maze","","Maze.html","",""],["MazeCell","","MazeCell.html","","<p>maze_cell.rb Written by: Noranda Brown Version: 2014.2.8\n"],["MazeGenerator","","MazeGenerator.html","","<p>maze_generator.rb Written by: Noranda Brown Version: 2014.2.8\n"],["MazePrinter","","MazePrinter.html","","<p>maze_printer.rb Written by: Noranda Brown Version: 2014.2.8\n"],["MazeSolver","","MazeSolver.html","","<p>maze_solver.rb Written by: Noranda Brown Version: 2014.2.8\n"],["MazeSolverCell","","MazeSolverCell.html","","<p>maze_solver_cell.rb Written by: Noranda Brown Version: 2014.2.8\n"],["connect_cells","MazeCell","MazeCell.html#method-i-connect_cells","(cell)","<p>Connects the cell to the given cell and the given cell to the cell.\n"],["display","Maze","Maze.html#method-i-display","()","<p>Prints a diagram of the maze to the console.\n"],["distance_to","MazeCell","MazeCell.html#method-i-distance_to","(cell)","<p>Returns the distance from the cell to the given cell.\n"],["has_left_cell?","MazeCell","MazeCell.html#method-i-has_left_cell-3F","()","<p>Returns true if the cell has a connected cell to the left and false\notherwise.\n"],["has_top_cell?","MazeCell","MazeCell.html#method-i-has_top_cell-3F","()","<p>Returns true if the cell has a connected cell to the top and false\notherwise.\n"],["load","Maze","Maze.html#method-i-load","(string_maze)","<p>Loads a maze with the given string argument of 0&#39;s (for spaces) and\n1&#39;s (for walls) and returns …\n"],["new","Maze","Maze.html#method-c-new","(height = 3, width = 3)","<p>Initializes a maze with the given height and width, or 3 x 3 by default,\nand with 4 walled cells.\n"],["new","MazeCell","MazeCell.html#method-c-new","(x, y)","<p>Initializes a cell object with its x and y coordinates.\n"],["new","MazeGenerator","MazeGenerator.html#method-c-new","(maze)","<p>Initializes a MazeGenerator object with the given maze.\n"],["new","MazePrinter","MazePrinter.html#method-c-new","(maze, cell = nil)","<p>Initializes a MazePrinter object with the given maze and an optional cell\nto print an &#39;X&#39; in. …\n"],["new","MazeSolver","MazeSolver.html#method-c-new","(maze)","<p>Initializes a MazeSolver object with the given maze.\n"],["new","MazeSolverCell","MazeSolverCell.html#method-c-new","(cell, parent)","<p>Initializes a maze solver cell that includes a cell and its parent\ncell&#39;s MazeSolverCell object. …\n"],["print_maze","MazePrinter","MazePrinter.html#method-i-print_maze","()","<p>Prints the maze to the console.\n"],["redesign","Maze","Maze.html#method-i-redesign","()","<p>Resets all of the cells and walls and comes up with a random new maze of\nthe same size.\n"],["redesign","MazeGenerator","MazeGenerator.html#method-i-redesign","()","<p>Resets all of the cells and walls and comes up with a random new maze of\nthe same size. Recursively creates …\n"],["solve","Maze","Maze.html#method-i-solve","(begX, begY, endX, endY)","<p>Determines if there is a way to walk from a specified beginning position to\na specified ending position …\n"],["solve","MazeSolver","MazeSolver.html#method-i-solve","(start_cell, end_cell)","<p>Solves a maze given a start and end cell. Returns the solved path if the\nmaze is solvable and false if …\n"],["trace","Maze","Maze.html#method-i-trace","(begX, begY, endX, endY)","<p>Traces the solution to a maze by printing the positions that the solution\nvisits to the console.\n"],["README","","README_md.html","","<p>Assignment: PA 3\n<p><img src=\"https://secure.travis-ci.org/noranda/pa3.png\">\n<img\nsrc=\"https://codeclimate.com/github/noranda/pa3.png\"> ...\n"]]}}